import{P as d,I as O,r as y}from"./index.DJOQ5Iyl.js";function h(a){return!a||typeof a!="object"?a:{...a}}const v={async list(a){const{data:e}=await d.get("/departments",{params:a});return{...e,data:Array.isArray(e?.data)?e.data.map(h):[]}},async create(a){const{data:e}=await d.post("/departments",a);return h(e)},async getById(a){const{data:e}=await d.get(`/departments/${a}`);return h(e)},async updateById(a,e){const{data:r}=await d.put(`/departments/${a}`,e);return h(r)},async deleteById(a){const{data:e}=await d.delete(`/departments/${a}`);return e},async listMembers(a){const{data:e}=await d.get(`/departments/${a}/members`);return Array.isArray(e?.members)?e.members:[]},async addMember(a,{user_id:e,role:r,status:l,joined_at:m}){const{data:o}=await d.post(`/departments/${a}/members`,{user_id:e,role:r,status:l,joined_at:m});return o},async updateMember(a,e,{role:r,status:l,joined_at:m}){const{data:o}=await d.patch(`/departments/${a}/members/${e}`,{role:r,status:l,joined_at:m});return o},async removeMember(a,e){const{data:r}=await d.delete(`/departments/${a}/members/${e}`);return r}},I={async list(a){const{data:e}=await d.get("/standards",{params:a});return e},async getById(a){const{data:e}=await d.get(`/standards/${a}`);return e},async create(a){const{data:e}=await d.post("/standards",a);return e},async updateById(a,e){const{data:r}=await d.put(`/standards/${a}`,e);return r},async deleteById(a){const{data:e}=await d.delete(`/standards/${a}`);return e},async listByDepartment(a,e){const{data:r}=await d.get(`/departments/${a}/standards`,{params:e});return r},async createForDepartment(a,e){const{data:r}=await d.post(`/departments/${a}/standards`,e);return r}},B={async list(a){const{data:e}=await d.get("/evaluations",{params:a});return e},async getById(a){const{data:e}=await d.get(`/evaluations/${a}`);return e},async create(a){const{data:e}=await d.post("/evaluations",a);return e},async updateById(a,e){const{data:r}=await d.put(`/evaluations/${a}`,e);return r},async deleteById(a){const{data:e}=await d.delete(`/evaluations/${a}`);return e},async getEvaluators(a){const{data:e}=await d.get(`/evaluations/${a}/evaluators`);return Array.isArray(e?.evaluators)?e.evaluators:[]},async setEvaluators(a,e){const{data:r}=await d.post(`/evaluations/${a}/evaluators`,{user_ids:e});return r},async listByDepartment(a,e){const{data:r}=await d.get(`/departments/${a}/evaluations`,{params:e});return r},async createForDepartment(a,e){const{data:r}=await d.post(`/departments/${a}/evaluations`,e);return r},async listByStandard(a,e){const{data:r}=await d.get(`/standards/${a}/evaluations`,{params:e});return r},async createForStandard(a,e){const{data:r}=await d.post(`/standards/${a}/evaluations`,e);return r}},J=O("department",()=>{const a=y({total:0,totalPages:1,currentPage:1,pageSize:10,data:[]}),e=y(null),r=y(!1),l=y(null),m=y(!1),o=y({}),p=y({}),f=y({}),b=s=>{if(!s?.id)return;const n=a.value.data.findIndex(t=>t.id===s.id);n!==-1&&(a.value.data[n]=s)},F=async(s={},n=!1)=>{if(l.value=null,!(!n&&m.value))try{r.value=!0;const t=await v.list(s);Object.assign(a.value,{total:t.total||0,totalPages:t.totalPages||1,currentPage:s.page||1,pageSize:s.limit||10,data:t.data||[]}),m.value=!0}catch(t){l.value=t?.response?.data?.message||t?.message||"Failed to fetch departments"}finally{r.value=!1}},A=async s=>{l.value=null;try{r.value=!0;const n=await v.getById(s);return e.value=n,b(n),n}catch(n){throw l.value=n?.response?.data?.message||n?.message||"Failed to fetch department",n}finally{r.value=!1}},S=async s=>{l.value=null;try{r.value=!0;const n=await v.create(s);return a.value.data.push(n),a.value.total+=1,n}catch(n){throw l.value=n?.response?.data?.message||n?.message||"Failed to create department",n}finally{r.value=!1}},D=async(s,n)=>{l.value=null;try{r.value=!0;const t=await v.updateById(s,n);return b(t),e.value?.id===s&&(e.value=t),t}catch(t){throw l.value=t?.response?.data?.message||t?.message||"Failed to update department",t}finally{r.value=!1}},M=async s=>{l.value=null;try{r.value=!0,await v.deleteById(s),a.value.data=a.value.data.filter(n=>n.id!==s),a.value.total=Math.max(0,(a.value.total||1)-1),e.value?.id===s&&(e.value=null)}catch(n){throw l.value=n?.response?.data?.message||n?.message||"Failed to delete department",n}finally{r.value=!1}},$=async(s,n=!1)=>{l.value=null;try{if(r.value=!0,!n&&Array.isArray(o.value[s]))return o.value[s];const t=await v.listMembers(s);return o.value[s]=t,t}catch(t){throw l.value=t?.response?.data?.message||t?.message||"Failed to fetch members",t}finally{r.value=!1}},E=async(s,{user_id:n,role:t,status:u,joined_at:c})=>{l.value=null;try{r.value=!0;const i=await v.addMember(s,{user_id:n,role:t,status:u,joined_at:c});return await $(s,!0),i}catch(i){throw l.value=i?.response?.data?.message||i?.message||"Failed to add member",i}finally{r.value=!1}},P=async(s,n,{role:t,status:u,joined_at:c})=>{l.value=null;try{return r.value=!0,await v.updateMember(s,n,{role:t,status:u,joined_at:c})}catch(i){throw l.value=i?.response?.data?.message||i?.message||"Failed to update member",i}finally{r.value=!1}},x=async(s,n)=>{l.value=null;try{return r.value=!0,await v.removeMember(s,n)}catch(t){throw l.value=t?.response?.data?.message||t?.message||"Failed to remove member",t}finally{r.value=!1}},w=async(s,n={},t=!1)=>{l.value=null;try{if(r.value=!0,!t&&Array.isArray(p.value[s]))return p.value[s];const u=await I.listByDepartment(s,n),c=Array.isArray(u?.data)?u.data:[];return p.value[s]=c,c}catch(u){throw l.value=u?.response?.data?.message||u?.message||"Failed to fetch standards",u}finally{r.value=!1}},z=async(s,n)=>{l.value=null;try{r.value=!0;const t=await I.createForDepartment(s,n);return await w(s,{},!0),t}catch(t){throw l.value=t?.response?.data?.message||t?.message||"Failed to create standard",t}finally{r.value=!1}},L=async(s,n,t={departmentId:null})=>{l.value=null;try{r.value=!0;const u=await I.updateById(s,n);return t?.departmentId&&await w(t.departmentId,{},!0),u}catch(u){throw l.value=u?.response?.data?.message||u?.message||"Failed to update standard",u}finally{r.value=!1}},j=async(s,n={departmentId:null})=>{l.value=null;try{r.value=!0;const t=await I.deleteById(s);return n?.departmentId&&await w(n.departmentId,{},!0),t}catch(t){throw l.value=t?.response?.data?.message||t?.message||"Failed to delete standard",t}finally{r.value=!1}},g=async(s,n={},t=!1)=>{l.value=null;try{if(r.value=!0,!t&&Array.isArray(f.value[s]))return f.value[s];const u=await B.listByDepartment(s,n),c=Array.isArray(u?.data)?u.data:[];return f.value[s]=c,c}catch(u){throw l.value=u?.response?.data?.message||u?.message||"Failed to fetch evaluations",u}finally{r.value=!1}};return{departments:a,selectedDepartment:e,membersByDepartment:o,standardsByDepartment:p,evaluationsByDepartment:f,isLoading:r,isLoaded:m,error:l,fetchAll:F,fetchById:A,create:S,updateById:D,deleteById:M,fetchMembers:$,addMember:E,updateMember:P,removeMember:x,fetchStandards:w,createStandard:z,updateStandard:L,deleteStandard:j,fetchEvaluations:g,createEvaluation:async(s,n)=>{l.value=null;try{r.value=!0;const t=await B.createForDepartment(s,n);return await g(s,{},!0),t}catch(t){throw l.value=t?.response?.data?.message||t?.message||"Failed to create evaluation",t}finally{r.value=!1}},updateEvaluation:async(s,n,t={departmentId:null})=>{l.value=null;try{r.value=!0;const u=await B.updateById(s,n);return t?.departmentId&&await g(t.departmentId,{},!0),u}catch(u){throw l.value=u?.response?.data?.message||u?.message||"Failed to update evaluation",u}finally{r.value=!1}},deleteEvaluation:async(s,n={departmentId:null})=>{l.value=null;try{r.value=!0;const t=await B.deleteById(s);return n?.departmentId&&await g(n.departmentId,{},!0),t}catch(t){throw l.value=t?.response?.data?.message||t?.message||"Failed to delete evaluation",t}finally{r.value=!1}},resetStore:()=>{a.value={total:0,totalPages:1,currentPage:1,pageSize:10,data:[]},e.value=null,o.value={},r.value=!1,m.value=!1,l.value=null}}});export{B as e,I as s,J as u};
